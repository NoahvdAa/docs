(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.4.2"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.4.2"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.4.2"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.4.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"f54b62939a2d7b2a0e4388b8a6bd1ff3","url":"__docusaurus/debug.html"},{"revision":"84b626fcf53f84511a4148174c84e4fa","url":"__docusaurus/debug/config.html"},{"revision":"fa6eb7a138c0aff4c363d444fb499ced","url":"__docusaurus/debug/content.html"},{"revision":"30e97ed20f052dbd519d2817539f745b","url":"__docusaurus/debug/globalData.html"},{"revision":"5a7946ad622baaa8ba3e3bf07fff4b6e","url":"__docusaurus/debug/metadata.html"},{"revision":"1e20b732e442bea1023ae435d28c6065","url":"__docusaurus/debug/registry.html"},{"revision":"b6fe565a3d9575631f721d0eac1e43fd","url":"__docusaurus/debug/routes.html"},{"revision":"e105fc50e280e089e052f234c89e3b46","url":"404.html"},{"revision":"2c6a100cfd568c6205134a0bbaa3514e","url":"assets/css/styles.f8f8e815.css"},{"revision":"88a4fa7e8e254ef53b4188b4dc66aabe","url":"assets/js/08b731e1.24731931.js"},{"revision":"415a9e4a92079b9f87e998b5d64719e2","url":"assets/js/14eb3368.83f46efb.js"},{"revision":"3c1dbf5ff14af616119097f09b6c351d","url":"assets/js/17896441.612b6440.js"},{"revision":"191a0e9930ef8d03cc2489cc2b2924ff","url":"assets/js/1a4e3797.37a146cc.js"},{"revision":"f6fe66f65845d866f8d76346e7e44955","url":"assets/js/1be78505.05ba6939.js"},{"revision":"cf54cf0626dcb665453084289a6815b4","url":"assets/js/1df93b7f.4c4c6bdf.js"},{"revision":"c8df6bb74845a7bb5948c513effa50cd","url":"assets/js/230.025153b6.js"},{"revision":"6e2be5f15504cc312ab06b44f3655603","url":"assets/js/23374ca6.a8643e91.js"},{"revision":"74b44460fcf9363f82b2cf51478a2e2a","url":"assets/js/23abe487.4b661567.js"},{"revision":"19563e5a27f0d7180e8257162c977650","url":"assets/js/246f2c6f.3c0329b0.js"},{"revision":"aeef061e15e6b754aa1cfcbb9de8b851","url":"assets/js/26c06db6.5f5fefb8.js"},{"revision":"5bdd9553363624c9f05abacd54395565","url":"assets/js/2826cd9d.19254feb.js"},{"revision":"47470d2425361b242a96c2ae54cc5b91","url":"assets/js/2bae847e.4230f276.js"},{"revision":"9be1c9dec5d7da4171f2b9d25ee4b85e","url":"assets/js/31c00fd6.c2c1cae8.js"},{"revision":"72b331080e154486a514f7ad3d9ce629","url":"assets/js/3450.bf953156.js"},{"revision":"222e9aff9d5cf12a343e7f3ec9342716","url":"assets/js/3553af34.a0a36763.js"},{"revision":"35a44df6b90d4f01513d54a8906d4263","url":"assets/js/4579b8d2.aa4f856e.js"},{"revision":"ad43e5bee4382f508c3baf49fead9110","url":"assets/js/45c35fe9.c83a3f61.js"},{"revision":"921b828c9d6f950d6e8fc058d384886a","url":"assets/js/45c787c3.2e8f6c19.js"},{"revision":"35d1c1e18adb9ba3c6386ad1b34acb15","url":"assets/js/4608.caea357b.js"},{"revision":"6102c6559c65d1a78b1dce6824e4ce18","url":"assets/js/504d0c31.d1f15e8a.js"},{"revision":"5f6fc5d18da7e30d3c70024c239174fd","url":"assets/js/5131.023cfe0f.js"},{"revision":"bac0227e1e472bfc913013be425a9b9d","url":"assets/js/518dede0.b2843404.js"},{"revision":"b634454a0456d9950c4e61cedee94a10","url":"assets/js/5283.2c52b05b.js"},{"revision":"05b026f56c8104fe9a74e70d7e43e397","url":"assets/js/5ac37622.84946589.js"},{"revision":"b79d0d4f6e710e5ba91b6e5fa93c011d","url":"assets/js/645c917e.0a9e9cda.js"},{"revision":"70128e281113b14b26a8eb737b99be30","url":"assets/js/6794d4cd.a6ea18c2.js"},{"revision":"ce7f72eee5e0653199ab25bcdc86e81c","url":"assets/js/6815.8f5a7408.js"},{"revision":"0003b2ce93b87bde84448aebdc8e0d2f","url":"assets/js/68e633d4.3f0b5cfc.js"},{"revision":"5a0aafccc443095b70527b12cb815750","url":"assets/js/6945.7e7c6451.js"},{"revision":"a23e467cb11a7d34949df2533081188a","url":"assets/js/714943b7.1491f5a3.js"},{"revision":"2da77ca5dbf46d2fb453c9f2f9e9b53c","url":"assets/js/7f5bcd1a.253ac444.js"},{"revision":"c80316b1a86844a0263083b6d6794882","url":"assets/js/83cac198.75601490.js"},{"revision":"6e418399e14fd570c5af493bc905088e","url":"assets/js/8894.8579f5eb.js"},{"revision":"73661a02143a68c86aabc26036426883","url":"assets/js/8c1791c0.cddfb13a.js"},{"revision":"a5652952ec653f5de265f477299bd9c0","url":"assets/js/935f2afb.79117328.js"},{"revision":"8eba8366db244ea635c029505c65ed60","url":"assets/js/946bd85a.e9164d30.js"},{"revision":"a8b6d85cb8e80b6a19ddc82c88badbcd","url":"assets/js/9c4a842f.fd0f847b.js"},{"revision":"e498eb596d3fec083516cf4d13782dcc","url":"assets/js/a1d8fe0b.b6191dbf.js"},{"revision":"a119d41965ab407f1332f1588a600fcc","url":"assets/js/aa64850e.18a2dc6a.js"},{"revision":"b4a0ab1b331c3b581cdb905cdd8a43ea","url":"assets/js/ad6fe338.79f96dc9.js"},{"revision":"ed320829c437e6bc2c6f52c9214388f7","url":"assets/js/b56a856c.8f334dd9.js"},{"revision":"7b1eb85188c581b61b22253399cb07bc","url":"assets/js/ba8b3534.95116f15.js"},{"revision":"a884f10d188001a5a07c0067e053698a","url":"assets/js/bc01eff2.c850785f.js"},{"revision":"a7bf5ae1c8262b2988d18299a5fed4bb","url":"assets/js/bd0ab364.33a706ea.js"},{"revision":"33bd99a4cc115c41d09883674aa87491","url":"assets/js/bded232b.62b4cfa5.js"},{"revision":"cc0063acf968eb60566298ab763664b2","url":"assets/js/c290827d.900041a2.js"},{"revision":"b3e5a022865c426d4530f649d0f6adb8","url":"assets/js/c8f93db0.c2a2133e.js"},{"revision":"cc85659d8796d8053db733ab4246eadf","url":"assets/js/cf08fff7.81d240e5.js"},{"revision":"b671d7c971dc18f1797f8d33fe0e80f9","url":"assets/js/d934ac46.bdca01e8.js"},{"revision":"70a20484e09e21ec3c6e161ce5a003ab","url":"assets/js/de48decc.d40cf437.js"},{"revision":"1a2304e2ef1240030ceb6cdd56c708f2","url":"assets/js/e36987ae.42298b0f.js"},{"revision":"386bdf63637d04373db784f3d2db6d98","url":"assets/js/ede3a018.0f897d12.js"},{"revision":"cc3b32a92952f365a882af6829ea4958","url":"assets/js/ede75923.0c363450.js"},{"revision":"592e0ca53f582610774b2e8b537bdfe8","url":"assets/js/f71ce8f0.5dc66b8e.js"},{"revision":"f8ec521a8c5dc3e9b9a4804314bb07c7","url":"assets/js/fe4828cc.bda3e8f2.js"},{"revision":"ed050e133a339c85a83a9d0e4665191e","url":"assets/js/fe6bda18.35ff79e6.js"},{"revision":"92fe5cb949a3a02c171fccb9a00a13c2","url":"assets/js/ff7bed0d.dfcf73a4.js"},{"revision":"5d059b82cd366b778a1ef4861f3fd2d1","url":"assets/js/main.61ec38bc.js"},{"revision":"92e834a331c6d05988d60ddd7ff97835","url":"assets/js/runtime~main.c41568de.js"},{"revision":"784c74b2d98a363a31b07b32b8c3bae2","url":"category/how-to-guides.html"},{"revision":"5d39cf10168fb32807ee50f2f8c85f03","url":"category/reference.html"},{"revision":"ff3e5d20a24d199293a4e3b52bd67d2f","url":"category/tutorials.html"},{"revision":"2ef277d47e1fdb5b271cf7b4c962224d","url":"common/java-install.html"},{"revision":"0c6ba8f9c4cc741b8d225a600e93bc9f","url":"index.html"},{"revision":"d027630ca603e7792b2e7144ac870d6e","url":"intro.html"},{"revision":"93612675b03ca9aca39bd2a1373fee01","url":"manifest.json"},{"revision":"d87e57f1827312076d6d144ca5b78ef0","url":"paper.html"},{"revision":"7204fff1d269c6ebf28774d83a74809b","url":"paper/how-to/getting-started.html"},{"revision":"e28dd3a029c10d8ac832ecdb2afa4ae7","url":"paper/how-to/per-world-config.html"},{"revision":"35bb0ab9710493c5a7d35574303c65e0","url":"paper/reference/paper-yml.html"},{"revision":"cf5f8f6246074af26e7a8e12e6107ac6","url":"paper/tutorial/aikars-flags.html"},{"revision":"f23488abb2c575c00f5c9d0653d0c631","url":"paper/tutorial/update.html"},{"revision":"1cf1480c0ff647e6967d2537d77db9d4","url":"search.html"},{"revision":"fcda6aff2cbdcd99bcf039ce3427a08c","url":"velocity.html"},{"revision":"31e6f8f54ece3a1ca4c2992d5a9bc79f","url":"velocity/deployment.html"},{"revision":"4b4a1e05e5677bb1b0a23270e72390fb","url":"velocity/deployment/security.html"},{"revision":"557941fe31d01ec82a7a6e88277568ca","url":"velocity/deployment/tuning.html"},{"revision":"72f282d78bc908a92efdb2d9e22023df","url":"velocity/developers.html"},{"revision":"27ef2d7c24cd644f49f2594f26edeb71","url":"velocity/developers/api-basics.html"},{"revision":"0ec211a896cdfb5634b08b6190cad962","url":"velocity/developers/command-api.html"},{"revision":"ab3d720e31d8841e4dc8b5c87cef860d","url":"velocity/developers/creating-your-first-plugin.html"},{"revision":"51c28d0d358eaeca9e3d6453f5c57605","url":"velocity/developers/dependencies.html"},{"revision":"c062d0d6a24081bea548d18b631d9938","url":"velocity/developers/event-api.html"},{"revision":"41ef78e18e40367a960778f25cbe2c99","url":"velocity/developers/pitfalls.html"},{"revision":"71c0ec585c2428842f42cf5452197b9b","url":"velocity/developers/porting-from-velocity-1.html"},{"revision":"7df4073fc2f7ac91059d503d53b44202","url":"velocity/developers/task-scheduling.html"},{"revision":"d5ebd3a54ebdc870381466ebbdcd9fcc","url":"velocity/misc/credits.html"},{"revision":"34f74844fa2ff5be7a1be02e54bcc8a9","url":"velocity/users.html"},{"revision":"7a436245418f03b45fe859155956591b","url":"velocity/users/commands.html"},{"revision":"827bff8ee5f63c425e03183ef0377b57","url":"velocity/users/comparison.html"},{"revision":"616610c95a8132bb341de39fdd5876bc","url":"velocity/users/configuration.html"},{"revision":"77c5330f44f13500b309e7586f6e94f5","url":"velocity/users/faq.html"},{"revision":"16f23e7b8b885ab3406942c6e897af01","url":"velocity/users/forwarding.html"},{"revision":"fea7e2168fe02d3367fdcd45d4eb918a","url":"velocity/users/getting-started.html"},{"revision":"a5c500f6d0a203a2c36f938183bc9c91","url":"velocity/users/migration.html"},{"revision":"39544292aa79384774e440c3d64315da","url":"velocity/users/server-compatibility.html"},{"revision":"4d7552c458b2eb336473f5aea9f65ee8","url":"velocity/users/what-does-velocity-do-for-me.html"},{"revision":"52dbbb6351cd7248650e37f57bfb89d5","url":"waterfall.html"},{"revision":"b9701eca44b6e999aea2eada5362a3e0","url":"waterfall/configuration.html"},{"revision":"ccd940f618e7ce0dd5c819ff2630f0d0","url":"img/docs/guides/java/aternos.png"},{"revision":"27a331ad0d4f9b1b056d7aa7c497380c","url":"img/favicon.ico"},{"revision":"cf40f7154e8833e87c5a15b3c19cec64","url":"img/icons/icon-128x128.png"},{"revision":"d8c14f548f07f8b9f34900842e514de3","url":"img/icons/icon-144x144.png"},{"revision":"2352005bdb6116062586418be2feb0ee","url":"img/icons/icon-152x152.png"},{"revision":"69e1e4818e8c72f0b3faf7a71abeda26","url":"img/icons/icon-192x192.png"},{"revision":"e603d44fde637d0428169e42314c3039","url":"img/icons/icon-384x384.png"},{"revision":"ebde541848f562b741056bde05472bba","url":"img/icons/icon-512x512.png"},{"revision":"1fbf5b497e5d12fd86393175f9eaf139","url":"img/icons/icon-72x72.png"},{"revision":"50adede2c2bda637f507879fbb543480","url":"img/icons/icon-96x96.png"},{"revision":"69b156c91d208aff640e1016c38fb004","url":"img/logo.svg"},{"revision":"a9da426ad5475220ef18653219fd74de","url":"img/og-image.png"},{"revision":"249f3a6448ee743c8f87f15dd0c0b48c","url":"img/paper.png"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});"SKIP_WAITING"===(t.data&&t.data.type)&&self.skipWaiting()}))})()})()})();